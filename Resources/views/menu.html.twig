{% extends 'knp_menu.html.twig' %}

{% block item %}
{% if item.displayed %}
{# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if matcher.isCurrent(item) %}
        {%- set classes = classes|merge([options.currentClass]) %}
    {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
{#        {%- set classes = classes|merge([options.ancestorClass]) %}#}
        {%- set classes = classes|merge(['open']) %}
    {%- endif %}
{#    {%- if item.actsLikeFirst %}
        {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}
    {%- if item.actsLikeLast %}
        {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}#}
    
    {%- set attributes = item.attributes %}
    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
{# displaying the item #}
    <li {{ knp_menu.attributes(attributes) }}>
        {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
        {{ block('linkElement') }}
        {%- else %}
        {{ block('spanElement') }}
        {%- endif %}
{# render the list of children#}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
        {{ block('list') }}
    </li>
{% endif %}
{% endblock %}

{% block linkElement %}
    {% set linkAttributes = item.linkAttributes %}
    {%- if matcher.isCurrent(item) %}
        {%- set linkAttributes = linkAttributes|merge({'class': options.currentClass|join(' ')}) %}
    {% endif %}
    <a href="{{ item.uri }}"{{ knp_menu.attributes(linkAttributes) }}>
        {{ block('label') }}
    </a>

{% endblock %}

{% block label %}
    {% if item.labelAttribute('icon') %}<i class="menu-icon {{ item.labelAttribute('icon') }}"></i>{% endif %}
    {% if not item.labelAttribute('iconOnly') %}
        <span class="menu-text">
            {% if options.allow_safe_labels and item.getExtra('safe_label', false) %}{{ item.label|trans|raw }}{% else %}{{ item.label|trans }}{% endif %}
        </span>
    {% endif %}
    {% if item.labelAttribute('data-image') %}<img src="{{ item.labelAttribute('data-image') }}" alt="{{ item.name }}" class="menu-thumbnail"/>{% endif %}
{% endblock %}
    
{% block spanElement %}
    {% set labelAttributes = item.labelAttributes %}
    {%- if item.hasChildren %}
        {%- set labelAttributes = { 'class': 'menu-dropdown' } %}
    {% endif %}
    <a {{ knp_menu.attributes(labelAttributes) }} {% if item.hasChildren %}href="#"{% endif %}>
        {{ block('label') }}
        <i class="menu-expand"></i>
    </a>
{% endblock %}
    
